@model AdelfyStore.Models.TblAttributeValue
@using AdelfyStore.Models;
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row page-titles">
        <div class="col-md-5 col-8 align-self-center">
            <h3 class="text-themecolor m-b-0 m-t-0">Update Attribute Values</h3>

        </div>
        <div class="col-md-7 text-right">
            <a href="@Url.Action("Index", "Attributes")" class="btn waves-effect waves-light btn-danger hidden-sm-down  m-r-5"> Back To Attributes</a>
            <a href="@Url.Action("Index", "AttributeValues")" class="btn waves-effect waves-light btn-danger hidden-sm-down"> Back To List</a>
        </div>
    </div>
    <div class="card w-50-m-0auto">
        <div class="card-block">
            <div class="row">
                @using (Html.BeginForm("Edit", "AttributeValues", FormMethod.Post, new { @class = "form-horizontal form-material" }))
                {
                    @Html.HiddenFor(model => model.AttributeValueId)
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <input type="hidden" id="oldvalue" value="@Model.value" />
                    <input type="hidden" id="oldAttributeID" value="@Model.AttributeId" />


                    <div class="p-l-10 p-b-20"><span>All (*) marked fields are mandatory</span></div>
                    <div class="form-group">
                        <label class="col-sm-12">@Html.LabelFor(model => model.AttributeId)<span class="text-danger">*</span></label>
                        <div class="col-sm-12">
                            @{if (Model != null && Model.AttributeId != null && Model.AttributeId != 0)
                                {
                                    @Html.DropDownList("AttributeId", null, htmlAttributes: new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.AttributeId, new SelectList(ViewBag.AttributeId, "AttributeId", "Attribute"), " Attribute ", new { @class = "form-control form-control-line" })
                                }
                            }
                            @Html.ValidationMessageFor(model => model.AttributeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-12">@Html.LabelFor(model => model.value)<span class="text-danger">*</span></label>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.value, new { @onblur = "CheckIfExist()", htmlAttributes = new { @class = "form-control form-control-line" } })
                            @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-12"> @Html.LabelFor(model => model.orderNo) <span class="text-danger">*</span></label>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.orderNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.orderNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-12">
                        <div class="form-group text-right">
                            <input type="submit" value="Save" class="btn btn-success" />
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

<script>
    $('#value').blur(function () {
        debugger
        var oldvalue = $('#oldvalue').val();
        var v = $('#AttributeId').val();
        var value = $('#value').val();
        var oldAttributeID = $('#oldAttributeID').val();

        if (v == oldAttributeID && oldvalue == value) { }
        else {
            debugger
            if (v != '' && value != '') {
                $.ajax({
                    type: 'GET',
                    url: "/JavaScript/IsAttributevalueExists",
                    data: { 'value': value, 'id': v },
                    success: function (result) {
                        debugger
                        if (!result) {
                            swal("Alert !", "Value already exists ", "error");
                        }
                    }
                })
            }
        }
    })
</script>

<script type="text/javascript">
    $('#orderNo').change(function () {
        if ($('#orderNo').val() < 1) {
            $('#orderNo').val("0")
        }
    });
</script>